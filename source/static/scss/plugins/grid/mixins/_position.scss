// Reposition a column.
//
// @param {Number|Keyword} $position - Direction and amount to move. The column will move equal
// to the width of the column count specified. A positive number will push the column to the right,
// while a negative number will pull it to the left. Set to center to center the column.
@mixin make-column-position($position) {
    @if type-of($position) == 'number' {
        $offset: percentage($position / $grid-columns-count);

        position: relative;
        #{$global-left}: $offset;
    } @else if $position == center {
        &, &:last-child:not(:first-child) {
            float: none;
            clear: both;
        }
        margin-right: auto;
        margin-left: auto;
    } @else {
        @warn 'Wrong syntax for grid-column-position(). Enter a positive or negative number, or center.';
    }
}

// Reset a position definition.
@mixin make-column-unposition {
    position: static;
    float: $global-left;
    margin-right: 0;
    margin-left: 0;
}

// Offsets a column to the right by `$n` columns.
// @param {Number|List} $n - Width to offset by. You can pass in any value accepted by
// the `grid-column()` mixin, such as `6`, `50%`, or `1 of 2`.
@mixin make-column-offset($n) {
    margin-#{$global-left}: make-column($n);
}

// Disable the default behavior of the last column in a row aligning to the opposite edge.
@mixin make-column-end {
    // This extra specificity is required for the property to be applied
    &:last-child:last-child {
        float: $global-left;
    }
}

// Shorthand for `grid-column-position()`.
// @alias grid-column-position
@mixin make-col-pos($position) {
    @include make-column-position($position);
}

// Shorthand for `grid-column-unposition()`.
// @alias grid-column-unposition
@mixin make-col-unpos {
    @include make-column-unposition;
}

// Shorthand for `grid-column-offset()`.
// @alias grid-column-offset
@mixin make-col-off($n) {
    @include make-column-offset($n);
}

// Shorthand for `grid-column-end()`.
// @alias grid-column-end
@mixin make-col-end {
    @include make-column-end;
}
